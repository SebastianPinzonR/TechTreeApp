// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechTreeMVCApplication;

#nullable disable

namespace TechTreeMVCApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250715214218_Actualizacion_de_las_tablas")]
    partial class Actualizacion_de_las_tablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechTreeMVCApplication.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PulgarImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.CategoriaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeItemAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaItemId");

                    b.ToTable("CategoriasItem");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.Contenido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaItemId")
                        .HasColumnType("int");

                    b.Property<string>("HTMLContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contenido");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.TipodeMedio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PulgarImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipodeMedio");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.TipodeUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("TipodeUsuario");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.UsuarioAplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Direccion2")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("usuariosdelaAplicacion");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.CategoriaItem", b =>
                {
                    b.HasOne("TechTreeMVCApplication.Entities.Categoria", null)
                        .WithMany("CategoriaItems")
                        .HasForeignKey("CategoriaItemId");

                    b.HasOne("TechTreeMVCApplication.Entities.TipodeMedio", null)
                        .WithMany("CategoriaItems")
                        .HasForeignKey("CategoriaItemId");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.TipodeUsuario", b =>
                {
                    b.HasOne("TechTreeMVCApplication.Entities.Categoria", null)
                        .WithMany("TipodeUsuarios")
                        .HasForeignKey("TipoUsuarioId");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.Categoria", b =>
                {
                    b.Navigation("CategoriaItems");

                    b.Navigation("TipodeUsuarios");
                });

            modelBuilder.Entity("TechTreeMVCApplication.Entities.TipodeMedio", b =>
                {
                    b.Navigation("CategoriaItems");
                });
#pragma warning restore 612, 618
        }
    }
}
